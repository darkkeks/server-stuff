version: "3.9"

services:

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - VIRTUAL_HOST=grafana.darkkeks.me
      - GF_SERVER_ROOT_URL=https://grafana.darkkeks.me

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=5y'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

  pushgateway:
    image: prom/pushgateway
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=prometheus.darkkeks.me

  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - /srv/http/darkkeks.me:/srv/http/darkkeks.me
      - /etc/hse-bot-token:/etc/hse-bot-token

  # Пустой контейнер для nginx-proxy, 
  # пока нету нормального содержимого для домена darkkeks.me
  dummy-host:
    build: ./dummy/
    environment:
      - VIRTUAL_HOST=darkkeks.me

  host-monitoring:
    image: prom/node-exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  user-online:
    build: ./online-tracker/
    restart: unless-stopped
    volumes:
      - ./online-tracker/config.ini:/app/config.ini
      - ./online-tracker/common.session:/app/common.session

  user-online-sabina:
    build: ./online-tracker/
    restart: unless-stopped
    volumes:
      - ./online-tracker/config.ini:/app/config.ini
      - ./online-tracker/sabina.session:/app/sabina.session
    environment:
      - UO_WHITELIST=darkkeks,sabinadayanova
      - UO_METRIC=user_online_sabina
      - UO_SESSION=sabina

  user-online-marshal:
    build: ./online-tracker/
    restart: unless-stopped
    volumes:
      - ./online-tracker/config.ini:/app/config.ini
      - ./online-tracker/marshal.session:/app/marshal.session
    environment:
      - UO_WHITELIST=darkkeks,MarshalX
      - UO_METRIC=user_online_marshal
      - UO_SESSION=marshal

  taxi:
    build: ./taxi/
    restart: unless-stopped
    env_file:
      - ./taxi/.env

  kks-stat:
    build:
      context: ./telegram-bots/
      dockerfile: ./kks-stat/deploy/Dockerfile
    restart: unless-stopped
    env_file:
      - ./telegram-bots/.env.kks-stat
    environment:
      - VIRTUAL_HOST=kks.darkkeks.me

  postgres-kks:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: kks
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres-data-kks:/data/postgres

  life-stats:
    build:
      context: ./telegram-bots/
      dockerfile: ./life-stats/deploy/Dockerfile
    restart: unless-stopped
    env_file:
      - ./telegram-bots/.env.life-stats
    environment:
      - SPRING_PROFILES_ACTIVE=production

  postgres-life:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: lifestats
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres-data-life:/data/postgres

volumes:
  grafana-storage:
  prometheus-storage:
  postgres-data-kks:
  postgres-data-life:
